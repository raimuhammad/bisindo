type Video {
  id: ID!
  created_at: Date!
  updated_at: Date
  title: String!
  caption: String!
  description: String!
  content: String!
  thumbnail: String!
  duration: Int!
  grade: Grade!
  quizes: [Quiz!]!
  student_progress :[Progress!]!
}
extend type Query {
  video(id: ID! @eq): Video @find
  videos(
    grade_id: ID @where
    search: String @builder(method: "App\\GraphQL\\VideoResolver@search")
  ): [Video!]! @orderBy(column: "created_at", direction: DESC) @paginate
  getVideoByGrade(grade_id: ID! @where): [Video!]!
    @orderBy(column: "created_at", direction: ASC)
    @paginate
}
extend type Mutation {
  video(
    grade_id: String! @rules(apply: ["required", "exists:grades,id"])
    title: String! @rules(apply: ["required"])
    caption: String! @rules(apply: ["required"])
    description: String! @rules(apply: ["required"])
    content: Upload! @rules(apply: ["required", "mimetypes:video/*"])
  ): Video!
    @hasFile(key: "content", resolver: "App\\Models\\Video@attachContent")
    @create
  videoUpdate(
    id: ID! @eq
    title: String! @rules(apply: ["required"])
    caption: String! @rules(apply: ["required"])
    description: String! @rules(apply: ["required"])
  ): Video! @update
  videoDelete(id: ID! @eq): Video! @delete
}
